1. What is the output of
function f1() {
 console.log(“this is”, this);
 console.log(“arguments is”, arguments);
}

f1()

Choices are
a. Null, null
b. Undefined, undefined
c. global, arguments
d. f1, undefined

Ans is c. global, arguments


2) in the above function f1, I do the following
let f11 = f1.bind({a:1}, 'abc');
f11('def');
What is the output now ?
Choices are
e. Null, null
f. Undefined, undefined
g. {a:1}, arguments = [“abc”, “def”]
h. {a: 1}, arguments = [“def”]

Ans is g.{a:1}, arguments = [“abc”, “def”]
note :> arguments will be object not array


3) Write a simple function that will split an array into chunks with a specified size.
Example - array = [1,2,3,4,5]
chunkSize = 1 output = [1] [2] [3] [4] [5]
chunkSize = 2 [1, 2] [3, 4] [5]
chunkSize = 3 [1, 2, 3] [4, 5]
chunkSize = 4 [1, 2, 3, 4] [5]
chunkSize = 5 [1, 2, 3, 4, 5]
chunkSize = 6 [1, 2, 3, 4, 5]
Function signature is
function (array, chunkSize) {
//TODO: implement this.
}

Answer 
const data = [1,2,3,4, 5, 6, 7, 8]
const chunkSize = 6
const data_size = data.length
let data_size_tracker = data.length
let i=0

for(i=0; i <data_size; i+= chunkSize){
    if(data_size_tracker >= chunkSize){
        console.log(data.slice(i,i + chunkSize))
        data_size_tracker-=chunkSize
    }
    else {
        console.log(data.slice(i))
    }
}